/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  FranchiseeStore as PrismaFranchiseeStore,
} from "@prisma/client";

export class FranchiseeStoreServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FranchiseeStoreCountArgs, "select">
  ): Promise<number> {
    return this.prisma.franchiseeStore.count(args);
  }

  async franchiseeStores(
    args: Prisma.FranchiseeStoreFindManyArgs
  ): Promise<PrismaFranchiseeStore[]> {
    return this.prisma.franchiseeStore.findMany(args);
  }
  async franchiseeStore(
    args: Prisma.FranchiseeStoreFindUniqueArgs
  ): Promise<PrismaFranchiseeStore | null> {
    return this.prisma.franchiseeStore.findUnique(args);
  }
  async createFranchiseeStore(
    args: Prisma.FranchiseeStoreCreateArgs
  ): Promise<PrismaFranchiseeStore> {
    return this.prisma.franchiseeStore.create(args);
  }
  async updateFranchiseeStore(
    args: Prisma.FranchiseeStoreUpdateArgs
  ): Promise<PrismaFranchiseeStore> {
    return this.prisma.franchiseeStore.update(args);
  }
  async deleteFranchiseeStore(
    args: Prisma.FranchiseeStoreDeleteArgs
  ): Promise<PrismaFranchiseeStore> {
    return this.prisma.franchiseeStore.delete(args);
  }
}
